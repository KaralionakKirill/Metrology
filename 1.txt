a = input();
print(b);


def Choose(count, entry, m):
    count = int(count)

    if count == 1 and m == 'c':
        cipherRail(entry)
    if count == 1 and m == 'd':
        DechipherRail(entry)
    if count == 2 and m == 'c':
        cipherVig(entry)
    if count == 2 and m == 'd':
        dechipherVig(entry)
    if count == 3 :
        PlayfairDE(m)
class RailRoadHedge():

    def NormilizeText(self, text):
        text = text.lower()
        text = text.replace(' ', '')

    def Encode(self, key, E_text):

        key = int(key)

        if key == 0 or key == 1:
            print('Roflanebalo')
            return E_text
        else:
            key_rez = key
            key_check = key
            flag = True
            k = 0
            encodemessage = ''
            while key_rez != 0:
                while k < len(E_text):

                    if key_rez == key_check:
                        encodemessage += E_text[k]

                    if key_check == 1:
                        flag = False

                    if key_check == key:
                        flag = True

                    if flag == True:
                        key_check = key_check - 1
                    else:
                        key_check = key_check + 1

                    k += 1
                key_rez -= 1
                key_check = key_rez
                k = key - key_rez

            print(encodemessage)
            return encodemessage